class t{constructor(t,e={}){this.containerId=t,this.container=null,this.options={title:"Medical Interactive Tool",specialty:"general",description:"",showResults:!0,allowExport:!1,...e},this.data={},this.results={},this.isInitialized=!1}async init(){if(!this.isInitialized){if(this.container=document.getElementById(this.containerId),!this.container)throw new Error("Container with ID ".concat(this.containerId," not found"));this.setupAppStructure(),await this.initializeApp(),this.setupEventListeners(),this.isInitialized=!0,console.log("âœ… Interactive app initialized: ".concat(this.options.title))}}setupAppStructure(){this.container.innerHTML='\n      <div class="interactive-app" data-specialty="'.concat(this.options.specialty,'">\n        <header class="app-header">\n          <h3 class="app-title">').concat(this.options.title,"</h3>\n          ").concat(this.options.description?'<p class="app-description">'.concat(this.options.description,"</p>"):"",'\n          <div class="app-controls">\n            <button class="reset-btn" title="Reset">ðŸ”„</button>\n            ').concat(this.options.allowExport?'<button class="export-btn" title="Export Results">ðŸ“Š</button>':"",'\n            <button class="close-btn" title="Close">âœ•</button>\n          </div>\n        </header>\n        <main class="app-content">\n          <div class="app-form">\n            \x3c!-- App-specific form content will be inserted here --\x3e\n          </div>\n          ').concat(this.options.showResults?'<div class="app-results" style="display: none;"></div>':"",'\n        </main>\n        <footer class="app-footer">\n          <div class="app-disclaimer">\n            <p class="text-xs text-gray-400">\n              ðŸ”¬ For educational purposes only. Not a substitute for professional medical advice.\n            </p>\n          </div>\n        </footer>\n      </div>\n    ')}setupEventListeners(){const t=this.container.querySelector(".reset-btn");t&&t.addEventListener("click",()=>this.reset());const e=this.container.querySelector(".export-btn");e&&e.addEventListener("click",()=>this.exportResults());const n=this.container.querySelector(".close-btn");n&&n.addEventListener("click",()=>this.close())}async initializeApp(){throw new Error("initializeApp() must be implemented by subclass")}calculate(){throw new Error("calculate() must be implemented by subclass")}getFormData(){const t=this.container.querySelectorAll("input, select, textarea"),e={};return t.forEach(t=>{const n=t.name||t.id;n&&("checkbox"===t.type?e[n]=t.checked:"radio"===t.type?t.checked&&(e[n]=t.value):e[n]=t.value)}),e}setFormData(t){Object.entries(t).forEach(([t,e])=>{const n=this.container.querySelector('[name="'.concat(t,'"], #').concat(t));n&&("checkbox"===n.type?n.checked=Boolean(e):"radio"===n.type?n.value===e&&(n.checked=!0):n.value=e)})}showResults(t){const e=this.container.querySelector(".app-results");e&&(this.results=t,e.innerHTML=this.formatResults(t),e.style.display="block",e.scrollIntoView({behavior:"smooth",block:"nearest"}))}formatResults(t){return'\n      <div class="results-content">\n        <h4 class="results-title">Calculation Results</h4>\n        <div class="results-data">\n          '.concat(Object.entries(t).map(([t,e])=>'\n            <div class="result-item">\n              <span class="result-label">'.concat(this.formatLabel(t),':</span>\n              <span class="result-value">').concat(this.formatValue(e),"</span>\n            </div>\n          ")).join(""),"\n        </div>\n      </div>\n    ")}formatLabel(t){return t.replace(/([A-Z])/g," $1").replace(/^./,t=>t.toUpperCase()).trim()}formatValue(t){return"number"==typeof t?t.toFixed(2):"boolean"==typeof t?t?"Yes":"No":String(t)}showError(t){const e=this.container.querySelector(".app-results");e&&(e.innerHTML='\n        <div class="error-message">\n          <h4 class="text-red-400">Error</h4>\n          <p>'.concat(t,"</p>\n        </div>\n      "),e.style.display="block")}reset(){this.container.querySelectorAll("input, select, textarea").forEach(t=>{"checkbox"===t.type||"radio"===t.type?t.checked=!1:t.value=""});const t=this.container.querySelector(".app-results");t&&(t.style.display="none"),this.data={},this.results={},this.onReset()}onReset(){}exportResults(){if(!this.results||0===Object.keys(this.results).length)return void alert("No results to export. Please perform a calculation first.");const t={tool:this.options.title,specialty:this.options.specialty,timestamp:(new Date).toISOString(),inputs:this.data,results:this.results},e=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),n=URL.createObjectURL(e),a=document.createElement("a");a.href=n,a.download="".concat(this.options.title.replace(/\s+/g,"_"),"_").concat((new Date).toISOString().split("T")[0],".json"),document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(n)}close(){this.container.dispatchEvent(new CustomEvent("app-close",{detail:{appId:this.containerId}}))}destroy(){this.container&&(this.container.innerHTML=""),this.isInitialized=!1}validateRequired(t){const e=[];return t.forEach(t=>{const n=this.container.querySelector('[name="'.concat(t,'"], #').concat(t));n&&n.value.trim()||e.push(this.formatLabel(t))}),e}validateNumeric(t){const e=[];return t.forEach(t=>{const n=this.container.querySelector('[name="'.concat(t,'"], #').concat(t));n&&n.value&&isNaN(Number(n.value))&&e.push(this.formatLabel(t))}),e}validateRange(t,e,n){const a=this.container.querySelector('[name="'.concat(t,'"], #').concat(t));if(!a||!a.value)return null;const c=Number(a.value);return isNaN(c)?"".concat(this.formatLabel(t)," must be a number"):c<e||c>n?"".concat(this.formatLabel(t)," must be between ").concat(e," and ").concat(n):null}createFormField(t){const{type:e,name:n,label:a,options:c,required:s,placeholder:o,min:i,max:l,step:r}=t;let p="";const d=s?"required":"",u="".concat(this.containerId,"-").concat(n);switch(e){case"select":p='\n          <div class="form-field">\n            <label for="'.concat(u,'" class="form-label">').concat(a).concat(s?" *":"",'</label>\n            <select id="').concat(u,'" name="').concat(n,'" class="form-select" ').concat(d,'>\n              <option value="">Select...</option>\n              ').concat(c.map(t=>'<option value="'.concat(t.value,'">').concat(t.label,"</option>")).join(""),"\n            </select>\n          </div>\n        ");break;case"number":p='\n          <div class="form-field">\n            <label for="'.concat(u,'" class="form-label">').concat(a).concat(s?" *":"",'</label>\n            <input type="number" id="').concat(u,'" name="').concat(n,'" class="form-input" \n                   placeholder="').concat(o||"",'" ').concat(d,"\n                   ").concat(void 0!==i?'min="'.concat(i,'"'):"","\n                   ").concat(void 0!==l?'max="'.concat(l,'"'):"","\n                   ").concat(void 0!==r?'step="'.concat(r,'"'):"",">\n          </div>\n        ");break;case"checkbox":p='\n          <div class="form-field checkbox-field">\n            <label for="'.concat(u,'" class="checkbox-label">\n              <input type="checkbox" id="').concat(u,'" name="').concat(n,'" class="form-checkbox" ').concat(d,'>\n              <span class="checkbox-text">').concat(a,"</span>\n            </label>\n          </div>\n        ");break;case"radio":p='\n          <div class="form-field radio-group">\n            <fieldset>\n              <legend class="form-label">'.concat(a).concat(s?" *":"","</legend>\n              ").concat(c.map(t=>'\n                <label class="radio-label">\n                  <input type="radio" name="'.concat(n,'" value="').concat(t.value,'" class="form-radio" ').concat(d,'>\n                  <span class="radio-text">').concat(t.label,"</span>\n                </label>\n              ")).join(""),"\n            </fieldset>\n          </div>\n        ");break;default:p='\n          <div class="form-field">\n            <label for="'.concat(u,'" class="form-label">').concat(a).concat(s?" *":"",'</label>\n            <input type="text" id="').concat(u,'" name="').concat(n,'" class="form-input" \n                   placeholder="').concat(o||"",'" ').concat(d,">\n          </div>\n        ")}return p}}export{t as B};
//# sourceMappingURL=BaseInteractiveApp-Cyp2fbo_.js.map
