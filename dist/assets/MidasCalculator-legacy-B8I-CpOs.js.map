{"version":3,"file":"MidasCalculator-legacy-B8I-CpOs.js","sources":["../../src/apps/neurology/MidasCalculator.js"],"sourcesContent":["// src/apps/neurology/MidasCalculator.js - MIDAS (Migraine Disability Assessment) Calculator\nimport { BaseInteractiveApp } from '../shared/BaseInteractiveApp.js';\n\nexport class MidasCalculator extends BaseInteractiveApp {\n  constructor(containerId) {\n    super(containerId, {\n      title: 'MIDAS - Migraine Disability Assessment',\n      specialty: 'neurology',\n      description: 'Assess migraine-related disability over the past 3 months',\n      showResults: true,\n      allowExport: true\n    });\n  }\n\n  async initializeApp() {\n    const formContainer = this.container.querySelector('.app-form');\n    \n    formContainer.innerHTML = `\n      <div class=\"midas-form\">\n        <div class=\"form-intro\">\n          <p class=\"text-sm text-gray-300 mb-4\">\n            Please answer the following questions about headaches you have had over the last 3 months. \n            Write zero if you did not do the activity in the last 3 months.\n          </p>\n        </div>\n        \n        <div class=\"form-questions\">\n          ${this.createFormField({\n            type: 'number',\n            name: 'workDaysMissed',\n            label: 'On how many days in the last 3 months did you miss work or school because of your headaches?',\n            required: true,\n            min: 0,\n            placeholder: 'Enter number of days'\n          })}\n          \n          ${this.createFormField({\n            type: 'number',\n            name: 'workDaysReduced',\n            label: 'How many days in the last 3 months was your productivity at work or school reduced by half or more because of your headaches? (Do not include days you counted in question 1 where you missed work or school)',\n            required: true,\n            min: 0,\n            placeholder: 'Enter number of days'\n          })}\n          \n          ${this.createFormField({\n            type: 'number',\n            name: 'houseworkDaysMissed',\n            label: 'On how many days in the last 3 months did you not do household work because of your headaches?',\n            required: true,\n            min: 0,\n            placeholder: 'Enter number of days'\n          })}\n          \n          ${this.createFormField({\n            type: 'number',\n            name: 'houseworkDaysReduced',\n            label: 'How many days in the last 3 months was your productivity in household work reduced by half or more because of your headaches? (Do not include days you counted in question 3 where you did not do household work)',\n            required: true,\n            min: 0,\n            placeholder: 'Enter number of days'\n          })}\n          \n          ${this.createFormField({\n            type: 'number',\n            name: 'familyDaysMissed',\n            label: 'On how many days in the last 3 months did you miss family, social or leisure activities because of your headaches?',\n            required: true,\n            min: 0,\n            placeholder: 'Enter number of days'\n          })}\n          \n          <div class=\"additional-questions mt-6\">\n            <h4 class=\"text-lg font-semibold mb-4 text-gray-200\">Additional Information</h4>\n            \n            ${this.createFormField({\n              type: 'number',\n              name: 'headacheDays',\n              label: 'On how many days in the last 3 months did you have a headache? (If a headache lasted more than 1 day, count each day)',\n              required: false,\n              min: 0,\n              placeholder: 'Enter number of days'\n            })}\n            \n            ${this.createFormField({\n              type: 'select',\n              name: 'painIntensity',\n              label: 'On a scale of 0-10, on average, how painful were these headaches? (0 = no pain at all, 10 = pain as bad as it can be)',\n              required: false,\n              options: [\n                { value: '0', label: '0 - No pain' },\n                { value: '1', label: '1 - Very mild' },\n                { value: '2', label: '2 - Mild' },\n                { value: '3', label: '3 - Moderate' },\n                { value: '4', label: '4 - Somewhat severe' },\n                { value: '5', label: '5 - Severe' },\n                { value: '6', label: '6 - Very severe' },\n                { value: '7', label: '7 - Extremely severe' },\n                { value: '8', label: '8 - Nearly unbearable' },\n                { value: '9', label: '9 - Unbearable' },\n                { value: '10', label: '10 - Pain as bad as it can be' }\n              ]\n            })}\n          </div>\n        </div>\n        \n        <div class=\"form-actions mt-6\">\n          <button type=\"button\" class=\"calculate-btn bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-semibold\">\n            Calculate MIDAS Score\n          </button>\n        </div>\n      </div>\n    `;\n\n    // Add calculate button event listener\n    const calculateBtn = this.container.querySelector('.calculate-btn');\n    calculateBtn.addEventListener('click', () => this.calculate());\n  }\n\n  calculate() {\n    // Get form data\n    this.data = this.getFormData();\n    \n    // Validate required fields\n    const requiredFields = ['workDaysMissed', 'workDaysReduced', 'houseworkDaysMissed', 'houseworkDaysReduced', 'familyDaysMissed'];\n    const missing = this.validateRequired(requiredFields);\n    \n    if (missing.length > 0) {\n      this.showError(`Please fill in all required fields: ${missing.join(', ')}`);\n      return;\n    }\n\n    // Validate numeric fields\n    const numericFields = [...requiredFields, 'headacheDays'];\n    const invalid = this.validateNumeric(numericFields);\n    \n    if (invalid.length > 0) {\n      this.showError(`Please enter valid numbers for: ${invalid.join(', ')}`);\n      return;\n    }\n\n    // Calculate MIDAS score\n    const workDaysMissed = parseInt(this.data.workDaysMissed) || 0;\n    const workDaysReduced = parseInt(this.data.workDaysReduced) || 0;\n    const houseworkDaysMissed = parseInt(this.data.houseworkDaysMissed) || 0;\n    const houseworkDaysReduced = parseInt(this.data.houseworkDaysReduced) || 0;\n    const familyDaysMissed = parseInt(this.data.familyDaysMissed) || 0;\n\n    const midasScore = workDaysMissed + workDaysReduced + houseworkDaysMissed + houseworkDaysReduced + familyDaysMissed;\n    \n    // Determine disability grade\n    const { grade, description, recommendation } = this.getDisabilityGrade(midasScore);\n    \n    // Additional metrics\n    const headacheDays = parseInt(this.data.headacheDays) || null;\n    const painIntensity = parseInt(this.data.painIntensity) || null;\n\n    const results = {\n      midasScore,\n      disabilityGrade: grade,\n      disabilityDescription: description,\n      recommendation,\n      headacheDaysPerMonth: headacheDays ? Math.round(headacheDays / 3) : null,\n      averagePainIntensity: painIntensity\n    };\n\n    this.showResults(results);\n  }\n\n  getDisabilityGrade(score) {\n    if (score <= 5) {\n      return {\n        grade: 'I',\n        description: 'Minimal or infrequent disability',\n        recommendation: 'Continue current treatment. Monitor headache patterns and consider lifestyle modifications.'\n      };\n    } else if (score <= 10) {\n      return {\n        grade: 'II',\n        description: 'Mild or infrequent disability',\n        recommendation: 'Review current treatment effectiveness. Consider preventive therapy if not already started.'\n      };\n    } else if (score <= 20) {\n      return {\n        grade: 'III',\n        description: 'Moderate disability',\n        recommendation: 'Optimize current treatment. Strongly consider preventive therapy and comprehensive headache management.'\n      };\n    } else {\n      return {\n        grade: 'IV',\n        description: 'Severe disability',\n        recommendation: 'Urgent need for preventive therapy optimization. Consider specialist referral and comprehensive multidisciplinary approach.'\n      };\n    }\n  }\n\n  formatResults(results) {\n    return `\n      <div class=\"midas-results\">\n        <div class=\"results-header text-center mb-6\">\n          <h4 class=\"text-2xl font-bold text-blue-400\">MIDAS Score: ${results.midasScore}</h4>\n          <div class=\"grade-badge mt-2\">\n            <span class=\"inline-block bg-blue-600 text-white px-4 py-2 rounded-full text-lg font-semibold\">\n              Grade ${results.disabilityGrade}\n            </span>\n          </div>\n        </div>\n        \n        <div class=\"results-content\">\n          <div class=\"disability-info bg-gray-700 p-4 rounded-lg mb-4\">\n            <h5 class=\"font-semibold text-gray-200 mb-2\">Disability Level</h5>\n            <p class=\"text-gray-300\">${results.disabilityDescription}</p>\n          </div>\n          \n          <div class=\"recommendation bg-blue-900 p-4 rounded-lg mb-4\">\n            <h5 class=\"font-semibold text-blue-200 mb-2\">Clinical Recommendation</h5>\n            <p class=\"text-blue-100\">${results.recommendation}</p>\n          </div>\n          \n          ${results.headacheDaysPerMonth ? `\n            <div class=\"additional-metrics grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div class=\"metric-card bg-gray-700 p-3 rounded\">\n                <h6 class=\"font-semibold text-gray-200\">Headache Days/Month</h6>\n                <p class=\"text-lg text-gray-300\">${results.headacheDaysPerMonth} days</p>\n              </div>\n              ${results.averagePainIntensity ? `\n                <div class=\"metric-card bg-gray-700 p-3 rounded\">\n                  <h6 class=\"font-semibold text-gray-200\">Average Pain Intensity</h6>\n                  <p class=\"text-lg text-gray-300\">${results.averagePainIntensity}/10</p>\n                </div>\n              ` : ''}\n            </div>\n          ` : ''}\n          \n          <div class=\"interpretation mt-6 text-sm text-gray-400\">\n            <h6 class=\"font-semibold text-gray-300 mb-2\">MIDAS Score Interpretation:</h6>\n            <ul class=\"space-y-1\">\n              <li>• Grade I (0-5): Minimal disability</li>\n              <li>• Grade II (6-10): Mild disability</li>\n              <li>• Grade III (11-20): Moderate disability</li>\n              <li>• Grade IV (21+): Severe disability</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  onReset() {\n    // Clear any app-specific state\n    console.log('MIDAS Calculator reset');\n  }\n}"],"names":["exports","BaseInteractiveApp","constructor","containerId","super","title","specialty","description","showResults","allowExport","initializeApp","this","container","querySelector","innerHTML","createFormField","type","name","label","required","min","placeholder","options","value","addEventListener","calculate","data","getFormData","requiredFields","missing","validateRequired","length","showError","join","numericFields","invalid","validateNumeric","midasScore","parseInt","workDaysMissed","workDaysReduced","houseworkDaysMissed","houseworkDaysReduced","familyDaysMissed","grade","recommendation","getDisabilityGrade","headacheDays","painIntensity","results","disabilityGrade","disabilityDescription","headacheDaysPerMonth","Math","round","averagePainIntensity","score","formatResults","onReset","console","log"],"mappings":"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"}