{"version":3,"file":"BaseInteractiveApp-legacy-iXeSlhdL.js","sources":["../../src/apps/shared/BaseInteractiveApp.js"],"sourcesContent":["// src/apps/shared/BaseInteractiveApp.js - Base class for interactive medical applications\nexport class BaseInteractiveApp {\n  constructor(containerId, options = {}) {\n    this.containerId = containerId;\n    this.container = null;\n    this.options = {\n      title: 'Medical Interactive Tool',\n      specialty: 'general',\n      description: '',\n      showResults: true,\n      allowExport: false,\n      ...options\n    };\n    this.data = {};\n    this.results = {};\n    this.isInitialized = false;\n  }\n\n  async init() {\n    if (this.isInitialized) return;\n\n    this.container = document.getElementById(this.containerId);\n    if (!this.container) {\n      throw new Error(`Container with ID ${this.containerId} not found`);\n    }\n\n    // Setup basic structure\n    this.setupAppStructure();\n    \n    // Initialize app-specific functionality\n    await this.initializeApp();\n    \n    // Setup event listeners\n    this.setupEventListeners();\n    \n    this.isInitialized = true;\n    console.log(`âœ… Interactive app initialized: ${this.options.title}`);\n  }\n\n  setupAppStructure() {\n    this.container.innerHTML = `\n      <div class=\"interactive-app\" data-specialty=\"${this.options.specialty}\">\n        <header class=\"app-header\">\n          <h3 class=\"app-title\">${this.options.title}</h3>\n          ${this.options.description ? `<p class=\"app-description\">${this.options.description}</p>` : ''}\n          <div class=\"app-controls\">\n            <button class=\"reset-btn\" title=\"Reset\">ðŸ”„</button>\n            ${this.options.allowExport ? '<button class=\"export-btn\" title=\"Export Results\">ðŸ“Š</button>' : ''}\n            <button class=\"close-btn\" title=\"Close\">âœ•</button>\n          </div>\n        </header>\n        <main class=\"app-content\">\n          <div class=\"app-form\">\n            <!-- App-specific form content will be inserted here -->\n          </div>\n          ${this.options.showResults ? '<div class=\"app-results\" style=\"display: none;\"></div>' : ''}\n        </main>\n        <footer class=\"app-footer\">\n          <div class=\"app-disclaimer\">\n            <p class=\"text-xs text-gray-400\">\n              ðŸ”¬ For educational purposes only. Not a substitute for professional medical advice.\n            </p>\n          </div>\n        </footer>\n      </div>\n    `;\n  }\n\n  setupEventListeners() {\n    // Reset button\n    const resetBtn = this.container.querySelector('.reset-btn');\n    if (resetBtn) {\n      resetBtn.addEventListener('click', () => this.reset());\n    }\n\n    // Export button\n    const exportBtn = this.container.querySelector('.export-btn');\n    if (exportBtn) {\n      exportBtn.addEventListener('click', () => this.exportResults());\n    }\n\n    // Close button\n    const closeBtn = this.container.querySelector('.close-btn');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => this.close());\n    }\n  }\n\n  // Abstract methods to be implemented by subclasses\n  async initializeApp() {\n    throw new Error('initializeApp() must be implemented by subclass');\n  }\n\n  calculate() {\n    throw new Error('calculate() must be implemented by subclass');\n  }\n\n  // Common utility methods\n  getFormData() {\n    const formElements = this.container.querySelectorAll('input, select, textarea');\n    const data = {};\n    \n    formElements.forEach(element => {\n      const name = element.name || element.id;\n      if (name) {\n        if (element.type === 'checkbox') {\n          data[name] = element.checked;\n        } else if (element.type === 'radio') {\n          if (element.checked) {\n            data[name] = element.value;\n          }\n        } else {\n          data[name] = element.value;\n        }\n      }\n    });\n    \n    return data;\n  }\n\n  setFormData(data) {\n    Object.entries(data).forEach(([name, value]) => {\n      const element = this.container.querySelector(`[name=\"${name}\"], #${name}`);\n      if (element) {\n        if (element.type === 'checkbox') {\n          element.checked = Boolean(value);\n        } else if (element.type === 'radio') {\n          if (element.value === value) {\n            element.checked = true;\n          }\n        } else {\n          element.value = value;\n        }\n      }\n    });\n  }\n\n  showResults(results) {\n    const resultsContainer = this.container.querySelector('.app-results');\n    if (!resultsContainer) return;\n\n    this.results = results;\n    resultsContainer.innerHTML = this.formatResults(results);\n    resultsContainer.style.display = 'block';\n    \n    // Scroll to results\n    resultsContainer.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n  }\n\n  formatResults(results) {\n    // Default results formatting - can be overridden by subclasses\n    return `\n      <div class=\"results-content\">\n        <h4 class=\"results-title\">Calculation Results</h4>\n        <div class=\"results-data\">\n          ${Object.entries(results).map(([key, value]) => `\n            <div class=\"result-item\">\n              <span class=\"result-label\">${this.formatLabel(key)}:</span>\n              <span class=\"result-value\">${this.formatValue(value)}</span>\n            </div>\n          `).join('')}\n        </div>\n      </div>\n    `;\n  }\n\n  formatLabel(key) {\n    return key.replace(/([A-Z])/g, ' $1')\n              .replace(/^./, str => str.toUpperCase())\n              .trim();\n  }\n\n  formatValue(value) {\n    if (typeof value === 'number') {\n      return value.toFixed(2);\n    }\n    if (typeof value === 'boolean') {\n      return value ? 'Yes' : 'No';\n    }\n    return String(value);\n  }\n\n  showError(message) {\n    const resultsContainer = this.container.querySelector('.app-results');\n    if (resultsContainer) {\n      resultsContainer.innerHTML = `\n        <div class=\"error-message\">\n          <h4 class=\"text-red-400\">Error</h4>\n          <p>${message}</p>\n        </div>\n      `;\n      resultsContainer.style.display = 'block';\n    }\n  }\n\n  reset() {\n    // Clear form data\n    const formElements = this.container.querySelectorAll('input, select, textarea');\n    formElements.forEach(element => {\n      if (element.type === 'checkbox' || element.type === 'radio') {\n        element.checked = false;\n      } else {\n        element.value = '';\n      }\n    });\n\n    // Hide results\n    const resultsContainer = this.container.querySelector('.app-results');\n    if (resultsContainer) {\n      resultsContainer.style.display = 'none';\n    }\n\n    // Reset data\n    this.data = {};\n    this.results = {};\n    \n    // Call app-specific reset logic\n    this.onReset();\n  }\n\n  onReset() {\n    // Override in subclasses for custom reset logic\n  }\n\n  exportResults() {\n    if (!this.results || Object.keys(this.results).length === 0) {\n      alert('No results to export. Please perform a calculation first.');\n      return;\n    }\n\n    const exportData = {\n      tool: this.options.title,\n      specialty: this.options.specialty,\n      timestamp: new Date().toISOString(),\n      inputs: this.data,\n      results: this.results\n    };\n\n    // Create and download JSON file\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${this.options.title.replace(/\\s+/g, '_')}_${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n\n  close() {\n    // Emit close event for parent components to handle\n    this.container.dispatchEvent(new CustomEvent('app-close', {\n      detail: { appId: this.containerId }\n    }));\n  }\n\n  destroy() {\n    if (this.container) {\n      this.container.innerHTML = '';\n    }\n    this.isInitialized = false;\n  }\n\n  // Validation helpers\n  validateRequired(fields) {\n    const missing = [];\n    fields.forEach(field => {\n      const element = this.container.querySelector(`[name=\"${field}\"], #${field}`);\n      if (!element || !element.value.trim()) {\n        missing.push(this.formatLabel(field));\n      }\n    });\n    return missing;\n  }\n\n  validateNumeric(fields) {\n    const invalid = [];\n    fields.forEach(field => {\n      const element = this.container.querySelector(`[name=\"${field}\"], #${field}`);\n      if (element && element.value && isNaN(Number(element.value))) {\n        invalid.push(this.formatLabel(field));\n      }\n    });\n    return invalid;\n  }\n\n  validateRange(field, min, max) {\n    const element = this.container.querySelector(`[name=\"${field}\"], #${field}`);\n    if (!element || !element.value) return null;\n    \n    const value = Number(element.value);\n    if (isNaN(value)) return `${this.formatLabel(field)} must be a number`;\n    if (value < min || value > max) {\n      return `${this.formatLabel(field)} must be between ${min} and ${max}`;\n    }\n    return null;\n  }\n\n  // Utility method to create form elements\n  createFormField(config) {\n    const { type, name, label, options, required, placeholder, min, max, step } = config;\n    \n    let field = '';\n    const requiredAttr = required ? 'required' : '';\n    const inputId = `${this.containerId}-${name}`;\n    \n    switch (type) {\n      case 'select':\n        field = `\n          <div class=\"form-field\">\n            <label for=\"${inputId}\" class=\"form-label\">${label}${required ? ' *' : ''}</label>\n            <select id=\"${inputId}\" name=\"${name}\" class=\"form-select\" ${requiredAttr}>\n              <option value=\"\">Select...</option>\n              ${options.map(opt => `<option value=\"${opt.value}\">${opt.label}</option>`).join('')}\n            </select>\n          </div>\n        `;\n        break;\n      \n      case 'number':\n        field = `\n          <div class=\"form-field\">\n            <label for=\"${inputId}\" class=\"form-label\">${label}${required ? ' *' : ''}</label>\n            <input type=\"number\" id=\"${inputId}\" name=\"${name}\" class=\"form-input\" \n                   placeholder=\"${placeholder || ''}\" ${requiredAttr}\n                   ${min !== undefined ? `min=\"${min}\"` : ''}\n                   ${max !== undefined ? `max=\"${max}\"` : ''}\n                   ${step !== undefined ? `step=\"${step}\"` : ''}>\n          </div>\n        `;\n        break;\n      \n      case 'checkbox':\n        field = `\n          <div class=\"form-field checkbox-field\">\n            <label for=\"${inputId}\" class=\"checkbox-label\">\n              <input type=\"checkbox\" id=\"${inputId}\" name=\"${name}\" class=\"form-checkbox\" ${requiredAttr}>\n              <span class=\"checkbox-text\">${label}</span>\n            </label>\n          </div>\n        `;\n        break;\n      \n      case 'radio':\n        field = `\n          <div class=\"form-field radio-group\">\n            <fieldset>\n              <legend class=\"form-label\">${label}${required ? ' *' : ''}</legend>\n              ${options.map(opt => `\n                <label class=\"radio-label\">\n                  <input type=\"radio\" name=\"${name}\" value=\"${opt.value}\" class=\"form-radio\" ${requiredAttr}>\n                  <span class=\"radio-text\">${opt.label}</span>\n                </label>\n              `).join('')}\n            </fieldset>\n          </div>\n        `;\n        break;\n      \n      default: // text\n        field = `\n          <div class=\"form-field\">\n            <label for=\"${inputId}\" class=\"form-label\">${label}${required ? ' *' : ''}</label>\n            <input type=\"text\" id=\"${inputId}\" name=\"${name}\" class=\"form-input\" \n                   placeholder=\"${placeholder || ''}\" ${requiredAttr}>\n          </div>\n        `;\n    }\n    \n    return field;\n  }\n}"],"names":["exports","constructor","containerId","options","this","container","title","specialty","description","showResults","allowExport","data","results","isInitialized","init","document","getElementById","Error","setupAppStructure","initializeApp","setupEventListeners","console","log","innerHTML","resetBtn","querySelector","addEventListener","reset","exportBtn","exportResults","closeBtn","close","calculate","getFormData","formElements","querySelectorAll","forEach","element","name","id","type","checked","value","setFormData","Object","entries","Boolean","resultsContainer","formatResults","style","display","scrollIntoView","behavior","block","map","key","formatLabel","formatValue","join","replace","str","toUpperCase","trim","toFixed","String","showError","message","onReset","keys","length","alert","exportData","tool","timestamp","Date","toISOString","inputs","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","createElement","href","download","split","body","appendChild","click","removeChild","revokeObjectURL","dispatchEvent","CustomEvent","detail","appId","destroy","validateRequired","fields","missing","field","push","validateNumeric","invalid","isNaN","Number","validateRange","min","max","createFormField","config","label","required","placeholder","step","requiredAttr","inputId","opt","undefined"],"mappings":"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"}